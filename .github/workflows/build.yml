name: build

on:
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  build:
    name: "build"
    runs-on: "ubuntu-20.04"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev gdal-bin build-essential gmt
          export C_INCLUDE_PATH=/usr/include/gdal:$C_INCLUDE_PATH
          export CPLUS_INCLUDE_PATH=/usr/include/gdal:$CPLUS_INCLUDE_PATH
          sudo ldconfig

      - name: Install eigen
        run: |
          sudo apt-get update
          sudo apt-get install libeigen3-dev

      - name: Install doxygen
        run: |
          sudo apt-get update
          sudo apt-get install doxygen-latex doxygen graphviz python3-breathe python3-sphinx

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Setup building
        run: |
          git submodule update --init --recursive
          sudo su
          cd extern/abseil-cpp
          mkdir build
          cmake -B build -S .
          cd build && make && make install

      - name: Build all
        run: |
          cd ../../..
          mkdir build
          cmake -B build -S .
          cmake --build build --target gisl

      - name: Catch2 tests
        run: |
          cmake --build build --target tests
          cd build/tests
          ./tests